// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeizureTrackerAPI.Context;

#nullable disable

namespace SeizureTrackerAPI.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("SeizureTrackerAPI.Models.Caregiver", b =>
                {
                    b.Property<Guid>("CaregiverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PatientID")
                        .HasColumnType("TEXT");

                    b.HasKey("CaregiverID");

                    b.HasIndex("PatientID");

                    b.ToTable("Caregivers");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.CaregiverPatientLink", b =>
                {
                    b.Property<Guid>("LinkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CaregiverID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PatientID")
                        .HasColumnType("TEXT");

                    b.HasKey("LinkID");

                    b.HasIndex("PatientID");

                    b.HasIndex("CaregiverID", "PatientID")
                        .IsUnique();

                    b.ToTable("CaregiverPatientLinks");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.Patient", b =>
                {
                    b.Property<Guid>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PatientID");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.Seizure", b =>
                {
                    b.Property<Guid>("SeizureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PatientID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SeizureComments")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SeizureDateTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("SeizureDurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeizureSeverity")
                        .HasColumnType("INTEGER");

                    b.HasKey("SeizureID");

                    b.HasIndex("PatientID");

                    b.ToTable("Seizures");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.Caregiver", b =>
                {
                    b.HasOne("SeizureTrackerAPI.Models.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientID");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.CaregiverPatientLink", b =>
                {
                    b.HasOne("SeizureTrackerAPI.Models.Caregiver", "Caregiver")
                        .WithMany("CaregiverLinks")
                        .HasForeignKey("CaregiverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SeizureTrackerAPI.Models.Patient", "Patient")
                        .WithMany("PatientLinks")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caregiver");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.Seizure", b =>
                {
                    b.HasOne("SeizureTrackerAPI.Models.Patient", "Patient")
                        .WithMany("Seizures")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.Caregiver", b =>
                {
                    b.Navigation("CaregiverLinks");
                });

            modelBuilder.Entity("SeizureTrackerAPI.Models.Patient", b =>
                {
                    b.Navigation("PatientLinks");

                    b.Navigation("Seizures");
                });
#pragma warning restore 612, 618
        }
    }
}
